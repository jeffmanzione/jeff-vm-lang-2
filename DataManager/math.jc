module math
  rmdl  io
  mdst  io
  res   0.000001
  push  
  res   self
  fld   epsilon
  res   3.141593
  push  
  res   self
  fld   pi
  res   2.718282
  push  
  res   self
  fld   e
  jmp   16

@max
  push  
  tget  0
  set   x
  res   
  tget  1
  set   y
  res   x
  push  
  res   y
  push  
  gt    
  if    2
  res   y
  jmp   1
  res   x
  ret   
  jmp   26

@max3
  push  
  tget  0
  set   x
  res   
  push  
  tget  1
  set   y
  res   
  tget  2
  set   z
  res   max
  push  
  res   z
  push  
  res   max
  push  
  res   y
  push  
  res   x
  push  
  tupl  2
  call  
  push  
  tupl  2
  call  
  ret   
  jmp   7

@sqr
  set   x
  res   x
  push  
  res   x
  push  
  mult  
  ret   
  jmp   31

@int_pow
  push  
  tget  0
  set   x
  res   
  tget  1
  set   n
  res   1
  push  
  res   n
  push  
  eq    
  if    17
  res   x
  push  
  res   int_pow
  push  
  res   n
  push  
  res   1
  push  
  sub   
  push  
  res   x
  push  
  tupl  2
  call  
  push  
  mult  
  jmp   1
  res   x
  ret   
  jmp   34

@sqrt
  set   n
  res   n
  set   x
  res   1.000000
  set   y
  res   x
  push  
  res   y
  push  
  sub   
  push  
  res   epsilon
  push  
  gt    
  ifn   17
  res   x
  push  
  res   y
  push  
  add   
  push  
  res   2.000000
  push  
  div   
  set   x
  res   n
  push  
  res   x
  push  
  div   
  set   y
  jmp   -27
  res   x
  ret   

class Rect
  jmp   32

@new
  push  
  tget  0
  set   top
  res   
  push  
  tget  1
  set   left
  res   
  push  
  tget  2
  set   width
  res   
  tget  3
  set   height
  res   top
  push  
  res   self
  fld   top
  res   left
  push  
  res   self
  fld   left
  res   width
  push  
  res   self
  fld   width
  res   height
  push  
  res   self
  fld   height
  res   self
  ret   
  jmp   8

@area
  res   self
  get   width
  push  
  res   self
  get   height
  push  
  mult  
  ret   
  jmp   47

@contains
  set   other
  res   other
  push  
  res   Rect
  push  
  is    
  not   
  if    37
  res   self
  get   left
  push  
  res   other
  push  
  lte   
  push  
  res   self
  get   top
  push  
  res   other
  get   top
  push  
  lte   
  push  
  res   self
  get   width
  push  
  res   other
  get   width
  push  
  gte   
  push  
  res   self
  get   height
  push  
  res   other
  get   width
  push  
  gte   
  push  
  and   
  push  
  and   
  push  
  and   
  jmp   1
  res   False
  ret   
  jmp   188

@to_s
  res   ''
  set   rect
  res   0
  set   i
  res   i
  push  
  res   self
  get   top
  push  
  lt    
  ifn   11
  res   rect
  push  
  res   '\n'
  call  append
  res   i
  push  
  res   1
  push  
  add   
  set   i
  jmp   -17
  res   0
  set   i
  res   i
  push  
  res   self
  get   left
  push  
  lt    
  ifn   11
  res   rect
  push  
  res   ' '
  call  append
  res   i
  push  
  res   1
  push  
  add   
  set   i
  jmp   -17
  res   rect
  push  
  res   '+'
  call  append
  res   0
  set   i
  res   i
  push  
  res   self
  get   width
  push  
  lt    
  ifn   11
  res   rect
  push  
  res   '-'
  call  append
  res   i
  push  
  res   1
  push  
  add   
  set   i
  jmp   -17
  res   rect
  push  
  res   '+'
  call  append
  res   rect
  push  
  res   '\n'
  call  append
  res   0
  set   i
  res   i
  push  
  res   self
  get   height
  push  
  lt    
  ifn   55
  res   0
  set   j
  res   j
  push  
  res   self
  get   left
  push  
  lt    
  ifn   11
  res   rect
  push  
  res   ' '
  call  append
  res   j
  push  
  res   1
  push  
  add   
  set   j
  jmp   -17
  res   rect
  push  
  res   '|'
  call  append
  res   0
  set   j
  res   j
  push  
  res   self
  get   width
  push  
  lt    
  ifn   11
  res   rect
  push  
  res   ' '
  call  append
  res   j
  push  
  res   1
  push  
  add   
  set   j
  jmp   -17
  res   rect
  push  
  res   '|\n'
  call  append
  res   i
  push  
  res   1
  push  
  add   
  set   i
  jmp   -61
  res   0
  set   i
  res   i
  push  
  res   self
  get   left
  push  
  lt    
  ifn   11
  res   rect
  push  
  res   ' '
  call  append
  res   i
  push  
  res   1
  push  
  add   
  set   i
  jmp   -17
  res   rect
  push  
  res   '+'
  call  append
  res   0
  set   i
  res   i
  push  
  res   self
  get   width
  push  
  lt    
  ifn   11
  res   rect
  push  
  res   '-'
  call  append
  res   i
  push  
  res   1
  push  
  add   
  set   i
  jmp   -17
  res   rect
  push  
  res   '+'
  call  append
  res   rect
  ret   
endclass
  exit  0
