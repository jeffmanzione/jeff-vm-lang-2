module builtin
  rmdl  io
  mdst  io
  jmp   24

@range
  push  
  tget  0
  set   start
  res   
  tget  1
  set   end
  anew  
  set   arr
  res   start
  set   i
  push  
  push  end
  lt    
  ifn   8
  push  arr
  res   i
  call  append
  push  i
  push  1
  add   
  set   i
  jmp   -12
  res   arr
  ret   

class Object
  jmp   6

@to_s
  res   self
  get   class
  gtsh  name
  push  '()'
  add   
  ret   
endclass

class Class
  jmp   5

@to_s
  res   self
  gtsh  name
  push  '.class'
  add   
  ret   
endclass

class Function
  jmp   21

@to_s
  res   self
  get   class
  gtsh  name
  push  '('
  res   self
  get   $module
  gtsh  name
  push  '.'
  res   self
  gtsh  name
  push  ')'
  add   
  push  
  add   
  push  
  add   
  push  
  add   
  push  
  add   
  ret   
endclass

class Module
  jmp   8

@to_s
  push  'Module('
  res   self
  gtsh  name
  push  ')'
  add   
  push  
  add   
  ret   
endclass

class Array
  jmp   6

@append
  set   elt
  push  elt
  psrs  self
  get   len
  aset  
  ret   
  jmp   28

@map
  set   f
  anew  
  set   arr
  res   self
  gtsh  len
  push  1
  sub   
  set   i
  push  
  push  0
  gte   
  ifn   14
  push  f
  push  self
  res   i
  aidx  
  call  
  push  
  push  arr
  res   i
  aset  
  push  i
  push  1
  sub   
  set   i
  jmp   -18
  res   arr
  ret   
  jmp   50

@flatten
  anew  
  set   arr
  res   0
  set   i
  push  
  res   self
  gtsh  len
  lt    
  ifn   39
  push  self
  res   i
  aidx  
  push  
  push  Array
  is    
  if    6
  push  arr
  push  self
  res   i
  aidx  
  call  append
  jmp   21
  push  self
  res   i
  aidx  
  set   child
  res   0
  set   j
  push  
  res   child
  gtsh  len
  lt    
  ifn   10
  push  arr
  push  child
  res   j
  aidx  
  call  append
  push  j
  push  1
  add   
  set   j
  jmp   -15
  push  i
  push  1
  add   
  set   i
  jmp   -44
  res   arr
  ret   
  jmp   49

@collect
  push  
  tget  0
  set   s
  res   
  tget  1
  set   f
  res   self
  gtsh  len
  push  0
  eq    
  ifn   11
  push  s
  push  Function
  is    
  if    3
  res   s
  set   a
  jmp   3
  push  s
  call  
  set   a
  ret   
  push  self
  res   0
  aidx  
  set   a
  res   1
  set   i
  push  
  res   self
  gtsh  len
  lt    
  ifn   14
  push  f
  push  self
  res   i
  aidx  
  push  
  push  a
  tupl  2
  call  
  set   a
  push  i
  push  1
  add   
  set   i
  jmp   -19
  res   a
  ret   
  jmp   34

@starts_with
  set   array
  gtsh  len
  res   self
  gtsh  len
  gt    
  ifn   2
  res   False
  ret   
  res   0
  set   i
  push  
  res   array
  gtsh  len
  lt    
  ifn   17
  push  array
  res   i
  aidx  
  push  
  push  self
  res   i
  aidx  
  push  
  neq   
  ifn   2
  res   False
  ret   
  push  i
  push  1
  add   
  set   i
  jmp   -22
  res   True
  ret   
  jmp   47

@ends_with
  set   array
  gtsh  len
  res   self
  gtsh  len
  gt    
  ifn   2
  res   False
  ret   
  res   self
  gtsh  len
  push  1
  sub   
  set   self_len
  res   array
  gtsh  len
  push  1
  sub   
  set   array_len
  res   0
  set   i
  push  
  push  array_len
  lte   
  ifn   21
  push  array
  push  array_len
  push  i
  sub   
  aidx  
  push  
  push  self
  push  self_len
  push  i
  sub   
  aidx  
  push  
  neq   
  ifn   2
  res   False
  ret   
  push  i
  push  1
  add   
  set   i
  jmp   -25
  res   True
  ret   
  jmp   85

@partition
  push  
  tget  0
  set   c
  peek  
  tget  1
  set   l
  res   
  tget  2
  set   h
  push  self
  res   h
  aidx  
  set   x
  push  l
  push  1
  sub   
  set   i
  res   l
  set   j
  push  
  push  h
  push  1
  sub   
  push  
  lte   
  ifn   36
  push  c
  push  x
  push  self
  res   j
  aidx  
  push  
  tupl  2
  call  
  push  
  push  0
  lte   
  ifn   19
  push  i
  push  1
  add   
  set   i
  push  self
  res   i
  aidx  
  set   tmp
  push  self
  res   j
  aidx  
  push  
  push  self
  res   i
  aset  
  push  tmp
  push  self
  res   j
  aset  
  push  j
  push  1
  add   
  set   j
  jmp   -43
  push  self
  push  i
  push  1
  add   
  aidx  
  set   tmp
  push  self
  res   h
  aidx  
  push  
  push  self
  push  i
  push  1
  add   
  aset  
  push  tmp
  push  self
  res   h
  aset  
  push  i
  push  1
  add   
  ret   
  jmp   45

@qsort
  push  
  tget  0
  set   c
  peek  
  tget  1
  set   l
  res   
  tget  2
  set   h
  push  c
  push  h
  push  l
  tupl  2
  call  
  push  
  push  0
  lt    
  ifn   25
  push  self
  push  h
  push  l
  push  c
  tupl  3
  call  partition
  set   p
  push  self
  push  p
  push  1
  sub   
  push  
  push  l
  push  c
  tupl  3
  call  qsort
  push  self
  push  h
  push  p
  push  1
  add   
  push  
  push  c
  tupl  3
  call  qsort
  res   self
  ret   
  jmp   11

@sort
  set   c
  psrs  self
  gtsh  len
  push  1
  sub   
  push  
  push  0
  push  c
  tupl  3
  call  qsort
  ret   
endclass

class String
  jmp   20

@new
  set   array
  res   0
  set   i
  push  
  res   array
  gtsh  len
  lt    
  ifn   10
  push  self
  push  array
  res   i
  aidx  
  call  append
  push  i
  push  1
  add   
  set   i
  jmp   -15
  res   self
  ret   
  jmp   35

@join
  set   array
  gtsh  len
  push  0
  eq    
  ifn   2
  res   ''
  ret   
  push  array
  res   0
  aidx  
  set   a
  res   1
  set   i
  push  
  res   array
  gtsh  len
  lt    
  ifn   15
  push  a
  push  self
  push  array
  res   i
  aidx  
  push  
  add   
  push  
  add   
  set   a
  push  i
  push  1
  add   
  set   i
  jmp   -20
  res   a
  ret   
endclass
  exit  0
