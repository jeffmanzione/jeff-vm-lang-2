module math
  rmdl  io
  mdst  io
  push  0.000001
  res   self
  fld   epsilon
  push  3.141593
  res   self
  fld   pi
  push  2.718282
  res   self
  fld   e
  jmp   14

@max
  push  
  tget  0
  set   x
  res   
  tget  1
  set   y
  push  x
  push  y
  gt    
  if    2
  res   y
  jmp   1
  res   x
  ret   
  jmp   20

@max3
  push  
  tget  0
  set   x
  peek  
  tget  1
  set   y
  res   
  tget  2
  set   z
  push  max
  push  z
  push  max
  push  y
  push  x
  tupl  2
  call  
  push  
  tupl  2
  call  
  ret   
  jmp   5

@sqr
  set   x
  push  x
  push  x
  mult  
  ret   
  jmp   24

@int_pow
  push  
  tget  0
  set   x
  res   
  tget  1
  set   n
  push  1
  push  n
  eq    
  if    12
  push  x
  push  int_pow
  push  n
  push  1
  sub   
  push  
  push  x
  tupl  2
  call  
  push  
  mult  
  jmp   1
  res   x
  ret   
  jmp   25

@sqrt
  set   n
  set   x
  res   1.000000
  set   y
  push  x
  push  y
  sub   
  push  
  push  epsilon
  gt    
  ifn   12
  push  x
  push  y
  add   
  push  
  push  2.000000
  div   
  set   x
  push  n
  push  x
  div   
  set   y
  jmp   -19
  res   x
  ret   

class Rect
  jmp   26

@new
  push  
  tget  0
  set   top
  peek  
  tget  1
  set   left
  peek  
  tget  2
  set   width
  res   
  tget  3
  set   height
  push  top
  res   self
  fld   top
  push  left
  res   self
  fld   left
  push  width
  res   self
  fld   width
  push  height
  res   self
  fld   height
  res   self
  ret   
  jmp   6

@area
  res   self
  gtsh  width
  res   self
  gtsh  height
  mult  
  ret   
  jmp   37

@contains
  set   other
  push  other
  push  Rect
  is    
  not   
  if    29
  res   self
  gtsh  left
  push  other
  lte   
  push  
  res   self
  gtsh  top
  res   other
  gtsh  top
  lte   
  push  
  res   self
  gtsh  width
  res   other
  gtsh  width
  gte   
  push  
  res   self
  gtsh  height
  res   other
  gtsh  width
  gte   
  push  
  and   
  push  
  and   
  push  
  and   
  jmp   1
  res   False
  ret   
  jmp   142

@to_s
  res   ''
  set   rect
  res   0
  set   i
  push  
  res   self
  gtsh  top
  lt    
  ifn   8
  push  rect
  res   '\n'
  call  append
  push  i
  push  1
  add   
  set   i
  jmp   -13
  res   0
  set   i
  push  
  res   self
  gtsh  left
  lt    
  ifn   8
  push  rect
  res   ' '
  call  append
  push  i
  push  1
  add   
  set   i
  jmp   -13
  push  rect
  res   '+'
  call  append
  res   0
  set   i
  push  
  res   self
  gtsh  width
  lt    
  ifn   8
  push  rect
  res   '-'
  call  append
  push  i
  push  1
  add   
  set   i
  jmp   -13
  push  rect
  res   '+'
  call  append
  push  rect
  res   '\n'
  call  append
  res   0
  set   i
  push  
  res   self
  gtsh  height
  lt    
  ifn   41
  res   0
  set   j
  push  
  res   self
  gtsh  left
  lt    
  ifn   8
  push  rect
  res   ' '
  call  append
  push  j
  push  1
  add   
  set   j
  jmp   -13
  push  rect
  res   '|'
  call  append
  res   0
  set   j
  push  
  res   self
  gtsh  width
  lt    
  ifn   8
  push  rect
  res   ' '
  call  append
  push  j
  push  1
  add   
  set   j
  jmp   -13
  push  rect
  res   '|\n'
  call  append
  push  i
  push  1
  add   
  set   i
  jmp   -46
  res   0
  set   i
  push  
  res   self
  gtsh  left
  lt    
  ifn   8
  push  rect
  res   ' '
  call  append
  push  i
  push  1
  add   
  set   i
  jmp   -13
  push  rect
  res   '+'
  call  append
  res   0
  set   i
  push  
  res   self
  gtsh  width
  lt    
  ifn   8
  push  rect
  res   '-'
  call  append
  push  i
  push  1
  add   
  set   i
  jmp   -13
  push  rect
  res   '+'
  call  append
  res   rect
  ret   
endclass
  exit  0
