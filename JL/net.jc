module net
  rmdl  io
  mdst  io
  rmdl  struct
  mdst  struct
  res   -1
  push
  res   self
  fld   SOCKET_ERROR
  res   2
  push
  res   self
  fld   AF_INET
  res   0
  push
  res   self
  fld   INADDR_ANY
  res   1
  push
  res   self
  fld   SOCK_STREAM
  res   'HTTP'
  push
  res   self
  fld   HTTP
  res   'OK'
  push
  res   self
  fld   OK
  res   'text/html'
  push
  res   self
  fld   TEXT_HTML
  res   'UTF-8'
  push
  res   self
  fld   UTF_8
  res   '<'
  push
  res   self
  fld   LT
  res   '>'
  push
  res   self
  fld   GT
  res   '&lt;'
  push
  res   self
  fld   LT_ESCAPED
  res   '&gt;'
  push
  res   self
  fld   GT_ESCAPED
  res   '&'
  push
  res   self
  fld   AMPER
  res   '?'
  push
  res   self
  fld   QUESTION
  res   '='
  push
  res   self
  fld   EQUALS
  res   'HTTP/1.1 200 OK
Content-Type: text/html; charset=UTF-8

'
  push
  res   self
  fld   HEADER_GENERIC_200_HTML
  res   'HTTP/1.1 200 OK
Content-Type: text/css; charset=UTF-8

'
  push
  res   self
  fld   HEADER_GENERIC_200_CSS
  res   'HTTP/1.1 200 OK
Content-Type: text/javascript; charset=UTF-8

'
  push
  res   self
  fld   HEADER_GENERIC_200_JS
  jmp   12

@init
  res   self
  get   is_inited
  ifn   1
  ret
  res   True
  push
  res   self
  fld   is_inited
  res   self
  push
  call  init__
  ret
  jmp   13

@cleanup
  res   self
  get   is_inited
  not
  ifn   1
  ret
  res   False
  push
  res   self
  fld   is_inited
  res   self
  push
  call  cleanup__
  ret

class Header
  jmp   33

@new(protocol,version,status_code,status,content_type,charset)
  push
  peek
  peek
  peek
  peek
  peek
  res
  res   protocol
  push
  res   self
  fld   protocol
  res   version
  push
  res   self
  fld   version
  res   status_code
  push
  res   self
  fld   status_code
  res   status
  push
  res   self
  fld   status
  res   content_type
  push
  res   self
  fld   content_type
  res   charset
  push
  res   self
  fld   charset
  res   self
  ret
  jmp   35

@to_s
  res   concat
  push
  res   '

'
  push
  res   self
  get   charset
  push
  res   '; charset='
  push
  res   self
  get   content_type
  push
  res   '
Content-Type: '
  push
  res   self
  get   status
  push
  res   ' '
  push
  res   self
  get   status_code
  push
  res   ' '
  push
  res   self
  get   version
  push
  res   '/'
  push
  res   self
  get   protocol
  push
  tupl  12
  call
  ret
endclass

  jmp   245

@parse_header(header_text)
  set   header_text
  res   header_text
  push
  res   '/'
  call  find
  set   i
  res   header_text
  push
  res   i
  push
  res   0
  push
  tupl  2
  call  substr
  set   protocol
  res   i
  push
  res   1
  push
  res   header_text
  push
  res   i
  push
  res   1
  push
  add
  push
  res   ' '
  push
  tupl  2
  call  find
  push
  add
  push
  add
  set   i2
  res   header_text
  push
  res   i2
  push
  res   i
  push
  res   1
  push
  add
  push
  tupl  2
  call  substr
  set   version
  res   i2
  push
  res   1
  push
  res   header_text
  push
  res   i2
  push
  res   1
  push
  add
  push
  res   ' '
  push
  tupl  2
  call  find
  push
  add
  push
  add
  set   i3
  res   header_text
  push
  res   i3
  push
  res   i2
  push
  res   1
  push
  add
  push
  tupl  2
  call  substr
  set   status_code
  res   i3
  push
  res   1
  push
  res   header_text
  push
  res   i3
  push
  res   1
  push
  add
  push
  res   '
'
  push
  tupl  2
  call  find
  push
  add
  push
  add
  set   i4
  res   header_text
  push
  res   i4
  push
  res   i3
  push
  res   1
  push
  add
  push
  tupl  2
  call  substr
  set   status
  res   i4
  push
  res   1
  push
  res   header_text
  push
  res   i4
  push
  res   1
  push
  add
  push
  res   ' '
  push
  tupl  2
  call  find
  push
  add
  push
  add
  set   i5
  res   i5
  push
  res   1
  push
  res   header_text
  push
  res   i5
  push
  res   1
  push
  add
  push
  res   ';'
  push
  tupl  2
  call  find
  push
  add
  push
  add
  set   i6
  res   header_text
  push
  res   i6
  push
  res   i5
  push
  res   1
  push
  add
  push
  tupl  2
  call  substr
  set   content_type
  res   i6
  push
  res   1
  push
  res   header_text
  push
  res   i6
  push
  res   1
  push
  add
  push
  res   '='
  push
  tupl  2
  call  find
  push
  add
  push
  add
  set   i7
  res   i7
  push
  res   1
  push
  res   header_text
  push
  res   i7
  push
  res   1
  push
  add
  push
  res   '
'
  push
  tupl  2
  call  find
  push
  add
  push
  add
  set   i8
  res   header_text
  push
  res   i8
  push
  res   i7
  push
  res   1
  push
  add
  push
  tupl  2
  call  substr
  set   charset
  res   Header
  push
  res   charset
  push
  res   content_type
  push
  res   status
  push
  res   status_code
  push
  res   version
  push
  res   protocol
  push
  tupl  6
  call
  ret
  ret

class HttpRequest
  jmp   33

@new(type,path,params,protocol,version,map)
  push
  peek
  peek
  peek
  peek
  peek
  res
  res   type
  push
  res   self
  fld   type
  res   path
  push
  res   self
  fld   path
  res   params
  push
  res   self
  fld   params
  res   protocol
  push
  res   self
  fld   protocol
  res   version
  push
  res   self
  fld   version
  res   map
  push
  res   self
  fld   map
  res   self
  ret
  jmp   23

@to_s
  res   concat
  push
  res   self
  get   version
  push
  res   '/'
  push
  res   self
  get   protocol
  push
  res   ' '
  push
  res   self
  get   path
  push
  res   ' '
  push
  res   self
  get   type
  push
  tupl  7
  call
  ret
endclass

  jmp   114

@parse_params(path)
  set   path
  res   path
  push
  res   QUESTION
  call  split
  set   query_parts
  res   query_parts
  push
  res   0
  aidx
  set   path
  res   struct
  push
  res   31
  call  Map
  set   params
  nblk
  res   range
  push
  res   query_parts
  get   len
  push
  res   1
  push
  tupl  2
  call
  push
  call  iter
  push
  dup
  call  has_next
  ifn   74
  dup
  call  next
  push
  tget  0
  set   _
  peek
  res
  tget  1
  set   i
  res   query_parts
  push
  res   i
  aidx
  set   part
  res   part
  push
  res   AMPER
  call  split
  set   param_parts
  nblk
  res   param_parts
  push
  call  iter
  push
  dup
  call  has_next
  ifn   44
  dup
  call  next
  push
  tget  0
  set   _
  peek
  res
  tget  1
  set   param
  res   param
  push
  res   EQUALS
  call  split
  set   kv
  res   kv
  get   len
  push
  res   2
  push
  lt
  if    13
  res   kv
  push
  res   1
  aidx
  push
  res   params
  push
  res   kv
  push
  res   0
  aidx
  aset
  jmp   9
  res   '1'
  push
  res   params
  push
  res   kv
  push
  res   0
  aidx
  aset
  jmp   -47
  res
  bblck
  jmp   -77
  res
  bblck
  res   params
  push
  res   path
  push
  tupl  2
  ret
  jmp   153

@parse_request(req)
  set   req
  ctch  134
  res   req
  push
  res   '
'
  call  split
  set   parts
  res   parts
  get   len
  push
  res   0
  push
  eq
  ifn   12
  res   Error
  push
  res   concat
  push
  res   req
  push
  res   'Invalid request: '
  push
  tupl  2
  call
  call
  rais
  res   parts
  push
  res   0
  aidx
  push
  call  trim
  set   request
  res   request
  push
  res   ' '
  call  split
  set   req_head
  res   req_head
  push
  res   0
  aidx
  set   type
  res   req_head
  push
  res   1
  aidx
  set   path
  res   parse_params
  push
  res   path
  call
  push
  tget  0
  set   path
  peek
  res
  tget  1
  set   params
  res   req_head
  push
  res   2
  aidx
  push
  res   '/'
  call  split
  set   protocol
  res   struct
  push
  res   51
  call  Map
  set   map
  nblk
  res   1
  set   i
  res   i
  push
  res   parts
  get   len
  push
  lt
  ifn   31
  res   parts
  push
  res   i
  aidx
  push
  res   ':'
  call  split
  set   kv
  res   kv
  push
  res   1
  aidx
  push
  call  trim
  push
  res   map
  push
  res   kv
  push
  res   0
  aidx
  push
  call  trim
  aset
  res   i
  push
  res   1
  push
  add
  set   i
  jmp   -37
  bblck
  res   HttpRequest
  push
  res   map
  push
  res   protocol
  push
  res   1
  aidx
  push
  res   protocol
  push
  res   0
  aidx
  push
  anew
  push
  res   path
  push
  res   type
  push
  tupl  6
  call
  ret
  jmp   12
  set   e
  res   io
  push
  res   e
  push
  res   io
  get   ERROR
  push
  tupl  2
  call  fprintln
  res   None
  ret
  res   Nil
  set   $try_goto
  ret
  jmp   198

@html_escape(text)
  set   text
  res   0
  set   i
  anew
  set   lts
  nblk
  res   i
  push
  res   text
  get   len
  push
  lt
  ifn   30
  res   text
  push
  res   i
  push
  res   LT
  push
  tupl  2
  call  find
  set   f
  res   f
  not
  ifn   1
  jmp   17
  res   i
  push
  res   f
  push
  add
  set   i
  res   lts
  push
  res   i
  call  append
  res   i
  push
  res   1
  push
  add
  set   i
  jmp   -38
  bblck
  res   0
  set   i
  nblk
  res   i
  push
  res   text
  get   len
  push
  lt
  ifn   30
  res   text
  push
  res   i
  push
  res   GT
  push
  tupl  2
  call  find
  set   f
  res   f
  not
  ifn   1
  jmp   17
  res   i
  push
  res   f
  push
  add
  set   i
  res   lts
  push
  res   i
  call  append
  res   i
  push
  res   1
  push
  add
  set   i
  jmp   -38
  bblck
  res   lts
  get   len
  push
  res   0
  push
  eq
  ifn   4
  res   text
  push
  call  copy
  ret
  res   lts
  push
  res   cmp
  call  sort
  res   ''
  set   result
  res   0
  set   old_i
  nblk
  res   0
  set   i
  res   i
  push
  res   lts
  get   len
  push
  lt
  ifn   64
  res   text
  push
  res   lts
  push
  res   i
  aidx
  aidx
  set   c
  res   result
  push
  res   lts
  push
  res   i
  aidx
  push
  res   old_i
  push
  res   text
  push
  tupl  3
  call  extend
  res   lts
  push
  res   i
  aidx
  push
  res   1
  push
  add
  set   old_i
  res   c
  push
  res   LT
  push
  res   0
  aidx
  push
  eq
  if    14
  res   c
  push
  res   GT
  push
  res   0
  aidx
  push
  eq
  ifn   4
  res   result
  push
  res   GT_ESCAPED
  call  extend
  jmp   4
  res   result
  push
  res   LT_ESCAPED
  call  extend
  res   i
  push
  res   1
  push
  add
  set   i
  jmp   -70
  bblck
  res   result
  push
  res   lts
  push
  res   lts
  get   len
  push
  res   1
  push
  sub
  aidx
  push
  res   text
  push
  tupl  2
  call  extend
  res   result
  ret
  ret

class RequestHandler
  jmp   6

@new
  anew
  push
  res   self
  fld   handlers
  res   self
  ret
  jmp   13

@register(match_fn,handler)
  push
  peek
  res
  res   self
  get   handlers
  push
  res   handler
  push
  res   match_fn
  push
  tupl  2
  call  append
  ret
  jmp   6

@register_else(handler)
  set   handler
  res   handler
  push
  res   self
  fld   elseHandler
  ret
  jmp   49

@handle(request)
  set   request
  nblk
  res   self
  get   handlers
  push
  call  iter
  push
  dup
  call  has_next
  ifn   26
  dup
  call  next
  push
  tget  0
  set   _
  peek
  tget  1
  push
  tget  0
  set   match_fn
  peek
  res
  tget  1
  set   handler
  res
  res   match_fn
  push
  res   request
  call
  ifn   5
  res   handler
  push
  res   request
  call
  ret
  jmp   -29
  res
  bblck
  res   self
  get   elseHandler
  ifn   5
  res   self
  push
  res   request
  call  elseHandler
  ret
  res   None
  ret
  ret
endclass

  jmp   15

@read_entire_file(path)
  set   path
  res   io
  push
  res   concat
  push
  res   path
  push
  res   '.'
  push
  tupl  2
  call
  call  FileReader
  push
  call  getlines
  ret

class CachedTextRenderer
  jmp   8

@new
  res   struct
  push
  call  Cache
  push
  res   self
  fld   cache
  res   self
  ret
  jmp   248

@get(key,src,params)
  push
  peek
  peek
  res
  res   self
  get   cache
  push
  res   params
  push
  res   src
  push
  tupl  2
  push
  jmp   150

@$anon_210_38(src,params)
  push
  peek
  res
  anew
  set   indices
  anew
  set   parts
  anew
  set   keys
  nblk
  res   params
  push
  call  iter
  push
  dup
  call  has_next
  ifn   43
  dup
  call  next
  push
  tget  0
  set   k
  peek
  res
  tget  1
  set   v
  res   src
  push
  res   k
  call  find_all
  set   k_inds
  nblk
  res   k_inds
  push
  call  iter
  push
  dup
  call  has_next
  ifn   18
  dup
  call  next
  push
  tget  0
  set   _
  peek
  res
  tget  1
  set   k_ind
  res   indices
  push
  res   k_ind
  push
  res   k
  push
  tupl  2
  call  append
  jmp   -21
  res
  bblck
  jmp   -46
  res
  bblck
  res   indices
  push
  jmp   18

@$anon_220_20(t1,t2)
  push
  peek
  res
  res   cmp
  push
  res   t2
  push
  res   1
  aidx
  push
  res   t1
  push
  res   1
  aidx
  push
  tupl  2
  call
  ret
  res   self
  get   $anon_220_20
  call  sort
  res   0
  set   index
  nblk
  res   indices
  push
  call  iter
  push
  dup
  call  has_next
  ifn   38
  dup
  call  next
  push
  tget  0
  set   _
  peek
  tget  1
  push
  tget  0
  set   key
  peek
  res
  tget  1
  set   i
  res
  res   parts
  push
  res   src
  push
  res   i
  push
  res   index
  push
  tupl  2
  call  substr
  call  append
  res   keys
  push
  res   key
  call  append
  res   i
  push
  res   key
  get   len
  push
  add
  set   index
  jmp   -41
  res
  bblck
  res   parts
  push
  res   src
  push
  res   index
  call  substr
  call  append
  res   keys
  push
  res   parts
  push
  tupl  2
  ret
  ret
  res   self
  get   $anon_210_38
  push
  res   key
  push
  tupl  3
  call  get
  set   parts_keys
  res   ''
  set   text
  res   parts_keys
  push
  res   0
  aidx
  set   parts
  res   parts_keys
  push
  res   1
  aidx
  set   keys
  res   keys
  get   len
  push
  res   parts
  get   len
  push
  add
  set   len
  nblk
  res   0
  set   i
  res   i
  push
  res   len
  push
  lt
  ifn   43
  res   i
  push
  res   2
  push
  mod
  push
  res   0
  push
  eq
  if    15
  res   text
  push
  res   params
  push
  res   keys
  push
  res   i
  push
  res   2
  push
  div
  aidx
  aidx
  call  extend
  jmp   11
  res   text
  push
  res   parts
  push
  res   i
  push
  res   2
  push
  div
  aidx
  call  extend
  res   i
  push
  res   1
  push
  add
  set   i
  jmp   -48
  bblck
  res   text
  ret
  ret
endclass

  exit  0
