module struct
  rmdl  io
  mdst  io

class Map
  jmp   23

@new
  set   sz
  res   sz
  push
  res   self
  fld   sz
  anew
  push
  res   self
  fld   table
  res   None
  push
  res   self
  get   table
  push
  res   self
  get   sz
  aset
  anew
  push
  res   self
  fld   keys
  res   self
  ret
  jmp   130

@__set__
  push
  tget  0
  cnst
  setc  k
  res
  tget  1
  cnst
  setc  v
  res   hash
  push
  res   k
  call
  set   hval
  res   hval
  push
  res   0
  push
  lt
  ifn   5
  res   hval
  push
  push  -1
  mult
  set   hval
  res   hval
  push
  res   self
  get   sz
  push
  mod
  set   pos
  res   self
  get   table
  push
  res   pos
  aidx
  not
  ifn   20
  res   v
  push
  res   k
  push
  tupl  2
  push
  anew  1
  push
  res   self
  get   table
  push
  res   pos
  aset
  res   self
  get   keys
  push
  res   k
  call  append
  res   None
  ret
  res   self
  get   table
  push
  res   pos
  aidx
  set   entries
  nblk
  res   0
  set   i
  res   i
  push
  res   entries
  get   len
  push
  lt
  ifn   39
  res   k
  push
  res   entries
  push
  res   i
  aidx
  push
  res   0
  aidx
  push
  eq
  ifn   20
  res   entries
  push
  res   i
  aidx
  push
  res   1
  aidx
  set   old_v
  res   v
  push
  res   k
  push
  tupl  2
  push
  res   entries
  push
  res   i
  aset
  res   old_v
  ret
  res   i
  push
  res   1
  push
  add
  set   i
  jmp   -45
  bblck
  res   entries
  push
  res   v
  push
  res   k
  push
  tupl  2
  call  append
  res   self
  get   keys
  push
  res   k
  call  append
  res   None
  ret
  ret
  jmp   72

@__index__
  set   k
  res   hash
  push
  res   k
  call
  set   hval
  res   hval
  push
  res   self
  get   sz
  push
  mod
  set   pos
  res   self
  get   table
  push
  res   pos
  aidx
  not
  ifn   2
  res   None
  ret
  res   self
  get   table
  push
  res   pos
  aidx
  set   entries
  nblk
  res   0
  set   i
  res   i
  push
  res   entries
  get   len
  push
  lt
  ifn   30
  res   eq
  push
  res   entries
  push
  res   i
  aidx
  push
  res   0
  aidx
  push
  res   k
  push
  tupl  2
  call
  ifn   8
  res   entries
  push
  res   i
  aidx
  push
  res   1
  aidx
  ret
  res   i
  push
  res   1
  push
  add
  set   i
  jmp   -36
  bblck
  res   None
  ret
  ret
  jmp   10

@__in__
  set   k
  res   self
  push
  res   k
  call  __index__
  push
  res   None
  push
  neq
  ret
  jmp   13

@iter
  res   KVIterator
  push
  res   self
  push
  res   self
  get   keys
  push
  call  iter
  push
  tupl  2
  call
  cnst
  ret
endclass


class Set
  jmp   10

@new
  set   sz
  res   Map
  push
  res   sz
  call
  push
  res   self
  fld   map
  res   self
  ret
  jmp   9

@insert
  set   k
  res   k
  push
  res   self
  get   map
  push
  res   k
  aset
  ret
  jmp   7

@__in__
  set   k
  res   self
  get   map
  push
  res   k
  aidx
  ret
  jmp   5

@iter
  res   self
  get   keys
  push
  call  iter
  ret
endclass


class Node
  jmp   13

@new
  res   Map
  push
  res   255
  call
  push
  res   self
  fld   children
  res   None
  push
  res   self
  fld   value
  res   self
  ret
  jmp   55

@to_s
  res   'Node('
  set   tos
  res   self
  get   value
  ifn   8
  res   tos
  push
  res   'value='
  call  extend
  push
  res   self
  get   value
  call  extend
  nblk
  res   self
  get   children
  push
  call  iter
  push
  dup
  call  has_next
  ifn   26
  dup
  call  next
  push
  tget  0
  set   k
  res
  tget  1
  set   v
  res   tos
  push
  res   concat
  push
  res   '),'
  push
  res   v
  push
  res   '->'
  push
  res   k
  push
  res   '('
  push
  tupl  5
  call
  call  extend
  jmp   -29
  res
  bblck
  res   tos
  push
  res   ')'
  call  extend
  ret
endclass


class Trie
  jmp   8

@new
  res   Node
  push
  call
  push
  res   self
  fld   root
  res   self
  ret
  jmp   73

@insert
  push
  tget  0
  set   key
  res
  tget  1
  set   value
  res   self
  push
  res   key
  push
  res   self
  get   root
  push
  tupl  2
  call  find_node
  push
  tget  0
  set   node
  res
  tget  1
  set   index_last_char
  res   index_last_char
  not
  ifn   2
  res   0
  set   index_last_char
  nblk
  res   key
  push
  res   key
  get   len
  push
  res   index_last_char
  push
  tupl  2
  call  substr
  push
  call  iter
  push
  dup
  call  has_next
  ifn   24
  dup
  call  next
  push
  tget  0
  set   i
  res
  tget  1
  set   char
  res   Node
  push
  call
  push
  res   node
  get   children
  push
  res   char
  aset
  res   node
  get   children
  push
  res   char
  aidx
  set   node
  jmp   -27
  res
  bblck
  res   value
  push
  res   node
  fld   value
  ret
  jmp   54

@find_node
  push
  tget  0
  set   node
  res
  tget  1
  set   key
  res   None
  set   index_last_char
  nblk
  res   key
  push
  call  iter
  push
  dup
  call  has_next
  ifn   30
  dup
  call  next
  push
  tget  0
  set   i
  res
  tget  1
  set   char
  res   node
  get   children
  push
  res   char
  call  __in__
  if    9
  res   i
  set   index_last_char
  res   index_last_char
  push
  res   node
  push
  tupl  2
  ret
  jmp   6
  res   node
  get   children
  push
  res   char
  aidx
  set   node
  jmp   -33
  res
  bblck
  res   index_last_char
  push
  res   node
  push
  tupl  2
  ret
  jmp   24

@find
  set   key
  res   self
  push
  res   key
  push
  res   self
  get   root
  push
  tupl  2
  call  find_node
  push
  tget  0
  set   node
  res
  tget  1
  set   i
  res   node
  not
  ifn   2
  res   None
  ret
  res   node
  get   value
  ret
  jmp   42

@collect_child_values
  set   node
  res   node
  get   value
  ifn   5
  res   node
  get   value
  push
  anew  1
  ret
  anew
  set   result
  nblk
  res   node
  get   children
  push
  call  iter
  push
  dup
  call  has_next
  ifn   18
  dup
  call  next
  push
  tget  0
  set   k
  res
  tget  1
  set   child
  res   child
  ifn   7
  res   result
  push
  res   self
  push
  res   child
  call  collect_child_values
  call  extend
  jmp   -21
  res
  bblck
  res   result
  ret
  jmp   37

@find_by_prefix
  set   key
  res   self
  push
  res   key
  push
  res   self
  get   root
  push
  tupl  2
  call  find_node
  push
  tget  0
  set   node
  res
  tget  1
  set   i
  res   node
  not
  ifn   2
  anew
  ret
  res   i
  ifn   9
  res   i
  push
  res   key
  get   len
  push
  lt
  ifn   2
  anew
  ret
  res   self
  push
  res   node
  call  collect_child_values
  ret
  jmp   12

@to_s
  res   concat
  push
  res   ')'
  push
  res   self
  get   root
  push
  res   'Trie('
  push
  tupl  3
  call
  ret
endclass

  exit  0
