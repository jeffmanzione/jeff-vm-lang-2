module net
  rmdl  io
  mdst  io
  rmdl  struct
  mdst  struct
  push  -1
  res   self
  fld   SOCKET_ERROR
  push  2
  res   self
  fld   AF_INET
  push  0
  res   self
  fld   INADDR_ANY
  push  1
  res   self
  fld   SOCK_STREAM
  push  'HTTP'
  res   self
  fld   HTTP
  push  'OK'
  res   self
  fld   OK
  push  'text/html'
  res   self
  fld   TEXT_HTML
  push  'UTF-8'
  res   self
  fld   UTF_8
  push  '<'
  res   self
  fld   LT
  push  '>'
  res   self
  fld   GT
  push  '&lt;'
  res   self
  fld   LT_ESCAPED
  push  '&gt;'
  res   self
  fld   GT_ESCAPED
  push  'HTTP/1.1 200 OK
Content-Type: text/html; charset=UTF-8

'
  res   self
  fld   HEADER_GENERIC_200
  jmp   10

@init
  res   self
  get   is_inited
  ifn   1
  ret
  push  True
  res   self
  fld   is_inited
  push  self
  call  init__
  ret
  jmp   11

@cleanup
  res   self
  get   is_inited
  not
  ifn   1
  ret
  push  False
  res   self
  fld   is_inited
  push  self
  call  cleanup__
  ret

class Header
  jmp   20

@new(protocol,version,status_code,status,content_type,charset)
  push  protocol
  res   self
  fld   protocol
  push  version
  res   self
  fld   version
  push  status_code
  res   self
  fld   status_code
  push  status
  res   self
  fld   status
  push  content_type
  res   self
  fld   content_type
  push  charset
  res   self
  fld   charset
  res   self
  ret
  jmp   22

@to_s
  push  concat
  push  '

'
  res   self
  gtsh  charset
  push  '; charset='
  res   self
  gtsh  content_type
  push  '
Content-Type: '
  res   self
  gtsh  status
  push  ' '
  res   self
  gtsh  status_code
  push  ' '
  res   self
  gtsh  version
  push  '/'
  res   self
  gtsh  protocol
  tupl  12
  call
  ret
endclass

  jmp   171

@parse_header(header_text)
  set   header_text
  push  header_text
  res   '/'
  call  find
  set   i
  push  header_text
  push  i
  push  0
  tupl  2
  call  substr
  set   protocol
  push  i
  push  1
  push  header_text
  push  i
  push  1
  add
  push
  push  ' '
  tupl  2
  call  find
  push
  add
  push
  add
  set   i2
  push  header_text
  push  i2
  push  i
  push  1
  add
  push
  tupl  2
  call  substr
  set   version
  push  i2
  push  1
  push  header_text
  push  i2
  push  1
  add
  push
  push  ' '
  tupl  2
  call  find
  push
  add
  push
  add
  set   i3
  push  header_text
  push  i3
  push  i2
  push  1
  add
  push
  tupl  2
  call  substr
  set   status_code
  push  i3
  push  1
  push  header_text
  push  i3
  push  1
  add
  push
  push  '
'
  tupl  2
  call  find
  push
  add
  push
  add
  set   i4
  push  header_text
  push  i4
  push  i3
  push  1
  add
  push
  tupl  2
  call  substr
  set   status
  push  i4
  push  1
  push  header_text
  push  i4
  push  1
  add
  push
  push  ' '
  tupl  2
  call  find
  push
  add
  push
  add
  set   i5
  push  i5
  push  1
  push  header_text
  push  i5
  push  1
  add
  push
  push  ';'
  tupl  2
  call  find
  push
  add
  push
  add
  set   i6
  push  header_text
  push  i6
  push  i5
  push  1
  add
  push
  tupl  2
  call  substr
  set   content_type
  push  i6
  push  1
  push  header_text
  push  i6
  push  1
  add
  push
  push  '='
  tupl  2
  call  find
  push
  add
  push
  add
  set   i7
  push  i7
  push  1
  push  header_text
  push  i7
  push  1
  add
  push
  push  '
'
  tupl  2
  call  find
  push
  add
  push
  add
  set   i8
  push  header_text
  push  i8
  push  i7
  push  1
  add
  push
  tupl  2
  call  substr
  set   charset
  push  Header
  push  charset
  push  content_type
  push  status
  push  status_code
  push  version
  push  protocol
  tupl  6
  call
  ret

class HttpRequest
  jmp   20

@new(type,path,params,protocol,version,map)
  push  type
  res   self
  fld   type
  push  path
  res   self
  fld   path
  push  params
  res   self
  fld   params
  push  protocol
  res   self
  fld   protocol
  push  version
  res   self
  fld   version
  push  map
  res   self
  fld   map
  res   self
  ret
  jmp   15

@to_s
  push  concat
  res   self
  gtsh  version
  push  '/'
  res   self
  gtsh  protocol
  push  ' '
  res   self
  gtsh  path
  push  ' '
  res   self
  gtsh  type
  tupl  7
  call
  ret
endclass

  jmp   112

@parse_request(req)
  set   req
  ctch  96
  push  req
  res   '
'
  call  split
  set   parts
  res   parts
  gtsh  len
  push  0
  eq
  ifn   8
  push  Error
  push  concat
  push  req
  push  'Invalid request: '
  tupl  2
  call
  call
  rais
  push  parts
  res   0
  aidx
  push
  call  trim
  set   request
  push  request
  res   ' '
  call  split
  set   req_head
  push  req_head
  res   0
  aidx
  set   type
  push  req_head
  res   1
  aidx
  set   path
  push  req_head
  res   2
  aidx
  push
  res   '/'
  call  split
  set   protocol
  push  struct
  res   51
  call  Map
  set   map
  nblk
  res   1
  set   i
  push
  res   parts
  gtsh  len
  lt
  ifn   25
  push  parts
  res   i
  aidx
  push
  res   ':'
  call  split
  set   kv
  push  kv
  res   1
  aidx
  push
  call  trim
  push
  push  map
  push  kv
  res   0
  aidx
  push
  call  trim
  aset
  push  i
  push  1
  add
  set   i
  jmp   -30
  bblck
  push  HttpRequest
  push  map
  push  protocol
  res   1
  aidx
  push
  push  protocol
  res   0
  aidx
  push
  anew
  push
  push  path
  push  type
  tupl  6
  call
  ret
  jmp   9
  set   e
  push  io
  push  e
  res   io
  gtsh  ERROR
  tupl  2
  call  fprintln
  res   None
  ret
  res   Nil
  set   $try_goto
  ret
  jmp   149

@html_escape(text)
  set   text
  res   0
  set   i
  anew
  set   lts
  nblk
  push  i
  res   text
  gtsh  len
  lt
  ifn   22
  push  text
  push  i
  push  LT
  tupl  2
  call  find
  set   f
  res   f
  not
  ifn   1
  jmp   12
  push  i
  push  f
  add
  set   i
  push  lts
  res   i
  call  append
  push  i
  push  1
  add
  set   i
  jmp   -28
  bblck
  res   0
  set   i
  nblk
  push  i
  res   text
  gtsh  len
  lt
  ifn   22
  push  text
  push  i
  push  GT
  tupl  2
  call  find
  set   f
  res   f
  not
  ifn   1
  jmp   12
  push  i
  push  f
  add
  set   i
  push  lts
  res   i
  call  append
  push  i
  push  1
  add
  set   i
  jmp   -28
  bblck
  res   lts
  gtsh  len
  push  0
  eq
  ifn   3
  push  text
  call  copy
  ret
  push  lts
  res   cmp
  call  sort
  res   ''
  set   result
  res   0
  set   old_i
  nblk
  res   0
  set   i
  push
  res   lts
  gtsh  len
  lt
  ifn   48
  push  text
  push  lts
  res   i
  aidx
  aidx
  set   c
  push  result
  push  lts
  res   i
  aidx
  push
  push  old_i
  push  text
  tupl  3
  call  extend
  push  lts
  res   i
  aidx
  push
  push  1
  add
  set   old_i
  push  c
  push  LT
  res   0
  aidx
  push
  eq
  if    11
  push  c
  push  GT
  res   0
  aidx
  push
  eq
  ifn   3
  push  result
  res   GT_ESCAPED
  call  extend
  jmp   3
  push  result
  res   LT_ESCAPED
  call  extend
  push  i
  push  1
  add
  set   i
  jmp   -53
  bblck
  push  result
  psrs  lts
  gtsh  len
  push  1
  sub
  aidx
  push
  push  text
  tupl  2
  call  extend
  res   result
  ret

class RequestHandler
  jmp   6

@new
  anew
  push
  res   self
  fld   handlers
  res   self
  ret
  jmp   7

@register(match_fn,handler)
  res   self
  gtsh  handlers
  push  handler
  push  match_fn
  tupl  2
  call  append
  ret
  jmp   5

@register_else(handler)
  set   handler
  push  handler
  res   self
  fld   elseHandler
  ret
  jmp   41

@handle(request)
  set   request
  nblk
  res   self
  gtsh  handlers
  call  iter
  push
  dup
  call  has_next
  ifn   21
  dup
  call  next
  push
  peek
  tget  1
  push
  tget  0
  set   match_fn
  res
  tget  1
  set   handler
  res
  push  match_fn
  res   request
  call
  ifn   4
  push  handler
  res   request
  call
  ret
  jmp   -24
  res
  bblck
  res   self
  get   elseHandler
  ifn   4
  push  self
  res   request
  call  elseHandler
  ret
  res   None
  ret
endclass

  jmp   11

@read_entire_file(path)
  set   path
  push  io
  push  concat
  push  path
  push  '.'
  tupl  2
  call
  call  FileReader
  push
  call  getlines
  ret
  exit  0
